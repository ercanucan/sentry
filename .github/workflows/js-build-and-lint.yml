name: js build and lint

on:
  # Only runs webpack on master to save bundle size info into artifacts
  # which are then used on PRs to compare against
  push:
    branches:
      - master
  pull_request:

jobs:
  files-changed:
    name: check frontend files changed
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      frontend_components_modified_lintable_files: ${{ steps.changes.outputs.frontend_components_modified_lintable_files }}

    steps:
      - uses: actions/checkout@v2

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@master
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml


  typescript-and-lint:
    name: typescript and lint
    needs: files-changed
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    if: needs.files-changed.outputs.frontend == 'true'

    steps:
      - uses: actions/checkout@v2

      - name: Internal github app token
        id: token
        uses: getsentry/action-github-app-token@v1
        continue-on-error: true
        with:
          app_id: ${{ secrets.SENTRY_INTERNAL_APP_ID }}
          private_key: ${{ secrets.SENTRY_INTERNAL_APP_PRIVATE_KEY }}

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@master
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1

      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock', 'api-docs/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Setup custom tsc matcher, see https://github.com/actions/setup-node/issues/97
      - name: setup matchers
        id: matchers
        run: |
          echo "::remove-matcher owner=masters::"
          echo "::add-matcher::.github/tsc.json"
          echo "::add-matcher::.github/eslint-stylish.json"

      # Lint entire frontend if this is on main branch
      - name: eslint
        if: github.ref == 'refs/heads/master'
        run: |
          # Run relax config on main branch (and stricter config for changed files)
          yarn lint -c .eslintrc.relax.js
          yarn lint:css

      # Otherwise if it's not main branch, only lint modified files
      # Note `eslint --fix` will not fail when it auto fixes files
      - name: eslint (changed files only)
        if: github.ref != 'refs/heads/master'
        run: |
          yarn eslint --fix ${{ needs.files-changed.outputs.frontend_modified_lintable_files }}

      - name: stylelint (changed files only)
        if: github.ref != 'refs/heads/master' && needs.files-changed.outputs.frontend_components_modified_lintable == 'true'
        run: |
          yarn stylelint ${{ needs.files-changed.outputs.frontend_components_modified_lintable_files }}

      # Check (and error) for dirty working tree for forks
      # Reason being we need a different token to auto commit changes and
      # forks do not have access to said token
      - name: Check for dirty git working tree (forks)
        if: steps.token.outcome != 'success' && github.ref != 'refs/heads/master'
        run: |
          git diff --quiet || (echo '::error ::lint produced file changes, run linter locally and try again' && exit 1)

      # If working tree is dirty, commit and update if we have a token
      - name: Commit any eslint fixed files
        if: steps.token.outcome == 'success' && github.ref != 'refs/heads/master'
        uses: getsentry/action-github-commit@main
        with:
          github-token: ${{ steps.token.outputs.token }}

      - name: tsc
        if: always()
        run: |
          yarn tsc -p config/tsconfig.build.json

      - name: storybook
        if: github.ref != 'refs/heads/master'
        env:
          STORYBOOK_BUILD: 1
        run: |
          yarn storybook-build

  webpack:
    runs-on: ubuntu-20.04
    needs: files-changed
    timeout-minutes: 10
    if: github.ref == 'refs/heads/master' || steps.changes.outputs.frontend == 'true'

    steps:
      - uses: actions/checkout@v2

      - uses: volta-cli/action@v1

      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock', 'api-docs/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - uses: getsentry/size-limit-action@v3
        env:
          SENTRY_INSTRUMENTATION: 1
          SENTRY_WEBPACK_WEBHOOK_SECRET: ${{ secrets.SENTRY_WEBPACK_WEBHOOK_SECRET }}
        with:
          main_branch: master
          workflow_name: 'js-build-and-lint'
          skip_step: install
          build_script: build
          windows_verbatim_arguments: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
